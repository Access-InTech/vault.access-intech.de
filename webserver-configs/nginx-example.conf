server {
    listen 80;
    listen [::]:80; # if you want to allow IPv6
    server_name YOUR.DOMAIN.TLD;
    # LetsEncrypt challenge DIR has to be created  
    # via 'mkdir -p /var/www/letsencrypt' 
    # and 'chown www-data:www-data /var/www/letsencrypt'
    root /var/www/letsencrypt; 
    default_type "text/plain";
    location ~ /\.well-known/acme-challenge/ {
        try_files $uri =404;
    }
    location / {
        return 301 https://YOUR.DOMAIN.TLD$request_uri;
    }
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2; # if you want to allow IPv6
  server_name YOUR.DOMAIN.TLD;

  ssl_certificate PATH_TO_YOUR_SSL_CERT_FILE;
  ssl_certificate_key PATH_TO_YOUR_SSL_KEY_FILE;
  ssl_session_cache shared:SSL:10m;
  add_header Strict-Transport-Security "max-age=63072000" always;
  ssl_stapling on;
  ssl_stapling_verify on;
  
  # Optional LetsEncrypt configurations
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;

  # Allow large attachments
  client_max_body_size 10M;

  location / {
    proxy_pass http://localhost:8081 ;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /notifications/hub {
    proxy_pass http://localhost:3012;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  location /notifications/hub/negotiate {
    proxy_pass http://localhost:8080 ;
  }

  # Optionally add extra authentication besides the ADMIN_TOKEN
  # If you don't want this, leave this part out
  #location /admin {
  #  # See: https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/
  #  # auth_basic "Private";
  #  # auth_basic_user_file /path/to/htpasswd_file;

  #  proxy_set_header Host $host;
  #  proxy_set_header X-Real-IP $remote_addr;
  #  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #  proxy_set_header X-Forwarded-Proto $scheme;
  #  proxy_pass http://localhost:8080 ;
  #}

}
